package com.taxamo.client.model;

/*
*  Copyright 2014 Taxamo, Ltd.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*/

/*
* NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
*/

import com.owlike.genson.annotation.JsonProperty;

import java.lang.Integer;
public class SettlementDailyStatsSchema {
  /* B2C transaction count. */
  @JsonProperty("b2c")
  private Integer b2c = null;
  /* Untaxed transaction count. */
  @JsonProperty("untaxed")
  private Integer untaxed = null;
  /* Total EU Taxed transaction count. */
  @JsonProperty("eu_taxed")
  private Integer euTaxed = null;
  /* Total EU B2B transaction count. */
  @JsonProperty("eu_b2b")
  private Integer euB2b = null;
  /* Total transaction count. */
  @JsonProperty("count")
  private Integer count = null;
  /* Total EU transaction count. */
  @JsonProperty("eu_total")
  private Integer euTotal = null;
  /* Date for stats in yyyy-MM-dd'T'hh:mm:ss'Z' format. */
  @JsonProperty("day_raw")
  private String dayRaw = null;
  /* B2B transaction count. */
  @JsonProperty("b2b")
  private Integer b2b = null;
  /* Date for stats in yyyy-MM-dd format. */
  @JsonProperty("day")
  private String day = null;
  @JsonProperty("b2c")
  public Integer getB2c() {
    return b2c;
  }

  @JsonProperty("b2c")
  public SettlementDailyStatsSchema setB2c(Integer b2c) {
    this.b2c = b2c;
    return this;
  }

  @JsonProperty("untaxed")
  public Integer getUntaxed() {
    return untaxed;
  }

  @JsonProperty("untaxed")
  public SettlementDailyStatsSchema setUntaxed(Integer untaxed) {
    this.untaxed = untaxed;
    return this;
  }

  @JsonProperty("eu_taxed")
  public Integer getEuTaxed() {
    return euTaxed;
  }

  @JsonProperty("eu_taxed")
  public SettlementDailyStatsSchema setEuTaxed(Integer euTaxed) {
    this.euTaxed = euTaxed;
    return this;
  }

  @JsonProperty("eu_b2b")
  public Integer getEuB2b() {
    return euB2b;
  }

  @JsonProperty("eu_b2b")
  public SettlementDailyStatsSchema setEuB2b(Integer euB2b) {
    this.euB2b = euB2b;
    return this;
  }

  @JsonProperty("count")
  public Integer getCount() {
    return count;
  }

  @JsonProperty("count")
  public SettlementDailyStatsSchema setCount(Integer count) {
    this.count = count;
    return this;
  }

  @JsonProperty("eu_total")
  public Integer getEuTotal() {
    return euTotal;
  }

  @JsonProperty("eu_total")
  public SettlementDailyStatsSchema setEuTotal(Integer euTotal) {
    this.euTotal = euTotal;
    return this;
  }

  @JsonProperty("day_raw")
  public String getDayRaw() {
    return dayRaw;
  }

  @JsonProperty("day_raw")
  public SettlementDailyStatsSchema setDayRaw(String dayRaw) {
    this.dayRaw = dayRaw;
    return this;
  }

  @JsonProperty("b2b")
  public Integer getB2b() {
    return b2b;
  }

  @JsonProperty("b2b")
  public SettlementDailyStatsSchema setB2b(Integer b2b) {
    this.b2b = b2b;
    return this;
  }

  @JsonProperty("day")
  public String getDay() {
    return day;
  }

  @JsonProperty("day")
  public SettlementDailyStatsSchema setDay(String day) {
    this.day = day;
    return this;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettlementDailyStatsSchema {\n");
    sb.append("  b2c: ").append(b2c).append("\n");
    sb.append("  untaxed: ").append(untaxed).append("\n");
    sb.append("  euTaxed: ").append(euTaxed).append("\n");
    sb.append("  euB2b: ").append(euB2b).append("\n");
    sb.append("  count: ").append(count).append("\n");
    sb.append("  euTotal: ").append(euTotal).append("\n");
    sb.append("  dayRaw: ").append(dayRaw).append("\n");
    sb.append("  b2b: ").append(b2b).append("\n");
    sb.append("  day: ").append(day).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

