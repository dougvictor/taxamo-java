package com.taxamo.client.model;

/*
*  Copyright 2014 Taxamo, Ltd.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*/

/*
* NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
*/


import java.math.BigDecimal;
import java.util.*;
import com.taxamo.client.model.AdditionalCurrencies;
import com.taxamo.client.model.CustomFields;
public class TransactionLines {
  /* Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers. */
  private List<CustomFields> customFields = new ArrayList<CustomFields>();
  /* Additional currency information - can be used to receive additional information about invoice in another currency. */
  private AdditionalCurrencies additionalCurrencies = null;
  /* Custom id, provided by ecommerce software. */
  private String customId = null;
  /* Deducted tax amount, calculated by taxmo. */
  private BigDecimal deductedTaxAmount = null;
  /* Product type, according to dictionary /dictionaries/product_types */
  private String productType = null;
  /* Quantity Defaults to 1. */
  private BigDecimal quantity = null;
  /* Tax amount, calculated by taxamo. */
  private BigDecimal taxAmount = null;
  /* Unit price. */
  private BigDecimal unitPrice = null;
  /* Unit of measure. */
  private String unitOfMeasure = null;
  /* Total amount. Required if amount is not provided. */
  private BigDecimal totalAmount = null;
  /* Tax rate, calculated by taxamo. */
  private BigDecimal taxRate = null;
  /* Refunded tax amount, calculated by taxmo. */
  private BigDecimal refundedTaxAmount = null;
  /* Generated line key. */
  private String lineKey = null;
  /* Amount. Required if total amount is not provided. */
  private BigDecimal amount = null;
  /* Generated id. */
  private BigDecimal id = null;
  /* Refunded total amount, calculated by taxmo. */
  private BigDecimal refundedTotalAmount = null;
  /* Line contents description. */
  private String description = null;
  /* Internal product code, used for invoicing for example. */
  private String productCode = null;
  /* Date of supply in yyyy-MM-dd format. */
  private String supplyDate = null;
  public List<CustomFields> getCustomFields() {
    return customFields;
  }
  public TransactionLines setCustomFields(List<CustomFields> customFields) {
    this.customFields = customFields;
    return this;
  }

  public AdditionalCurrencies getAdditionalCurrencies() {
    return additionalCurrencies;
  }
  public TransactionLines setAdditionalCurrencies(AdditionalCurrencies additionalCurrencies) {
    this.additionalCurrencies = additionalCurrencies;
    return this;
  }

  public String getCustomId() {
    return customId;
  }
  public TransactionLines setCustomId(String customId) {
    this.customId = customId;
    return this;
  }

  public BigDecimal getDeductedTaxAmount() {
    return deductedTaxAmount;
  }
  public TransactionLines setDeductedTaxAmount(BigDecimal deductedTaxAmount) {
    this.deductedTaxAmount = deductedTaxAmount;
    return this;
  }

  public String getProductType() {
    return productType;
  }
  public TransactionLines setProductType(String productType) {
    this.productType = productType;
    return this;
  }

  public BigDecimal getQuantity() {
    return quantity;
  }
  public TransactionLines setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

  public BigDecimal getTaxAmount() {
    return taxAmount;
  }
  public TransactionLines setTaxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  public BigDecimal getUnitPrice() {
    return unitPrice;
  }
  public TransactionLines setUnitPrice(BigDecimal unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

  public String getUnitOfMeasure() {
    return unitOfMeasure;
  }
  public TransactionLines setUnitOfMeasure(String unitOfMeasure) {
    this.unitOfMeasure = unitOfMeasure;
    return this;
  }

  public BigDecimal getTotalAmount() {
    return totalAmount;
  }
  public TransactionLines setTotalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  public BigDecimal getTaxRate() {
    return taxRate;
  }
  public TransactionLines setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

  public BigDecimal getRefundedTaxAmount() {
    return refundedTaxAmount;
  }
  public TransactionLines setRefundedTaxAmount(BigDecimal refundedTaxAmount) {
    this.refundedTaxAmount = refundedTaxAmount;
    return this;
  }

  public String getLineKey() {
    return lineKey;
  }
  public TransactionLines setLineKey(String lineKey) {
    this.lineKey = lineKey;
    return this;
  }

  public BigDecimal getAmount() {
    return amount;
  }
  public TransactionLines setAmount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  public BigDecimal getId() {
    return id;
  }
  public TransactionLines setId(BigDecimal id) {
    this.id = id;
    return this;
  }

  public BigDecimal getRefundedTotalAmount() {
    return refundedTotalAmount;
  }
  public TransactionLines setRefundedTotalAmount(BigDecimal refundedTotalAmount) {
    this.refundedTotalAmount = refundedTotalAmount;
    return this;
  }

  public String getDescription() {
    return description;
  }
  public TransactionLines setDescription(String description) {
    this.description = description;
    return this;
  }

  public String getProductCode() {
    return productCode;
  }
  public TransactionLines setProductCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

  public String getSupplyDate() {
    return supplyDate;
  }
  public TransactionLines setSupplyDate(String supplyDate) {
    this.supplyDate = supplyDate;
    return this;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionLines {\n");
    sb.append("  customFields: ").append(customFields).append("\n");
    sb.append("  additionalCurrencies: ").append(additionalCurrencies).append("\n");
    sb.append("  customId: ").append(customId).append("\n");
    sb.append("  deductedTaxAmount: ").append(deductedTaxAmount).append("\n");
    sb.append("  productType: ").append(productType).append("\n");
    sb.append("  quantity: ").append(quantity).append("\n");
    sb.append("  taxAmount: ").append(taxAmount).append("\n");
    sb.append("  unitPrice: ").append(unitPrice).append("\n");
    sb.append("  unitOfMeasure: ").append(unitOfMeasure).append("\n");
    sb.append("  totalAmount: ").append(totalAmount).append("\n");
    sb.append("  taxRate: ").append(taxRate).append("\n");
    sb.append("  refundedTaxAmount: ").append(refundedTaxAmount).append("\n");
    sb.append("  lineKey: ").append(lineKey).append("\n");
    sb.append("  amount: ").append(amount).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  refundedTotalAmount: ").append(refundedTotalAmount).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  productCode: ").append(productCode).append("\n");
    sb.append("  supplyDate: ").append(supplyDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

